/*
 * This file is generated by jOOQ.
 */
package com.fkfc.generatedsources.entity.tables;


import com.fkfc.generatedsources.entity.Indexes;
import com.fkfc.generatedsources.entity.Keys;
import com.fkfc.generatedsources.entity.Receitas;
import com.fkfc.generatedsources.entity.tables.records.ReceitaIngredienteRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReceitaIngrediente extends TableImpl<ReceitaIngredienteRecord> {

    private static final long serialVersionUID = 1693003617;

    /**
     * The reference instance of <code>receitas.receita_ingrediente</code>
     */
    public static final ReceitaIngrediente RECEITA_INGREDIENTE = new ReceitaIngrediente();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReceitaIngredienteRecord> getRecordType() {
        return ReceitaIngredienteRecord.class;
    }

    /**
     * The column <code>receitas.receita_ingrediente.receita_id</code>.
     */
    public final TableField<ReceitaIngredienteRecord, Integer> RECEITA_ID = createField("receita_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>receitas.receita_ingrediente.ingrediente_id</code>.
     */
    public final TableField<ReceitaIngredienteRecord, Integer> INGREDIENTE_ID = createField("ingrediente_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>receitas.receita_ingrediente.ordem</code>.
     */
    public final TableField<ReceitaIngredienteRecord, Integer> ORDEM = createField("ordem", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>receitas.receita_ingrediente.quantidade</code>.
     */
    public final TableField<ReceitaIngredienteRecord, String> QUANTIDADE = createField("quantidade", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>receitas.receita_ingrediente</code> table reference
     */
    public ReceitaIngrediente() {
        this(DSL.name("receita_ingrediente"), null);
    }

    /**
     * Create an aliased <code>receitas.receita_ingrediente</code> table reference
     */
    public ReceitaIngrediente(String alias) {
        this(DSL.name(alias), RECEITA_INGREDIENTE);
    }

    /**
     * Create an aliased <code>receitas.receita_ingrediente</code> table reference
     */
    public ReceitaIngrediente(Name alias) {
        this(alias, RECEITA_INGREDIENTE);
    }

    private ReceitaIngrediente(Name alias, Table<ReceitaIngredienteRecord> aliased) {
        this(alias, aliased, null);
    }

    private ReceitaIngrediente(Name alias, Table<ReceitaIngredienteRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ReceitaIngrediente(Table<O> child, ForeignKey<O, ReceitaIngredienteRecord> key) {
        super(child, key, RECEITA_INGREDIENTE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Receitas.RECEITAS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RECEITA_INGREDIENTE_FK_RECEITA_INGREDIENTE_INGREDIENTE1_IDX, Indexes.RECEITA_INGREDIENTE_FK_RECEITA_INGREDIENTE_RECEITA1_IDX, Indexes.RECEITA_INGREDIENTE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ReceitaIngredienteRecord> getPrimaryKey() {
        return Keys.KEY_RECEITA_INGREDIENTE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ReceitaIngredienteRecord>> getKeys() {
        return Arrays.<UniqueKey<ReceitaIngredienteRecord>>asList(Keys.KEY_RECEITA_INGREDIENTE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ReceitaIngredienteRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ReceitaIngredienteRecord, ?>>asList(Keys.FK_RECEITA_INGREDIENTE_RECEITA1, Keys.FK_RECEITA_INGREDIENTE_INGREDIENTE1);
    }

    public Receita receita() {
        return new Receita(this, Keys.FK_RECEITA_INGREDIENTE_RECEITA1);
    }

    public Ingrediente ingrediente() {
        return new Ingrediente(this, Keys.FK_RECEITA_INGREDIENTE_INGREDIENTE1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReceitaIngrediente as(String alias) {
        return new ReceitaIngrediente(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReceitaIngrediente as(Name alias) {
        return new ReceitaIngrediente(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ReceitaIngrediente rename(String name) {
        return new ReceitaIngrediente(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ReceitaIngrediente rename(Name name) {
        return new ReceitaIngrediente(name, null);
    }
}
