/*
 * This file is generated by jOOQ.
 */
package com.fkfc.generatedsources.entity.tables;


import com.fkfc.generatedsources.entity.Indexes;
import com.fkfc.generatedsources.entity.Keys;
import com.fkfc.generatedsources.entity.Receitas;
import com.fkfc.generatedsources.entity.tables.records.ReceitaMetadadoRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReceitaMetadado extends TableImpl<ReceitaMetadadoRecord> {

    private static final long serialVersionUID = -841396215;

    /**
     * The reference instance of <code>receitas.receita_metadado</code>
     */
    public static final ReceitaMetadado RECEITA_METADADO = new ReceitaMetadado();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReceitaMetadadoRecord> getRecordType() {
        return ReceitaMetadadoRecord.class;
    }

    /**
     * The column <code>receitas.receita_metadado.receita_id</code>.
     */
    public final TableField<ReceitaMetadadoRecord, Integer> RECEITA_ID = createField("receita_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>receitas.receita_metadado.metadado_id</code>.
     */
    public final TableField<ReceitaMetadadoRecord, Integer> METADADO_ID = createField("metadado_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>receitas.receita_metadado.valor</code>.
     */
    public final TableField<ReceitaMetadadoRecord, String> VALOR = createField("valor", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>receitas.receita_metadado</code> table reference
     */
    public ReceitaMetadado() {
        this(DSL.name("receita_metadado"), null);
    }

    /**
     * Create an aliased <code>receitas.receita_metadado</code> table reference
     */
    public ReceitaMetadado(String alias) {
        this(DSL.name(alias), RECEITA_METADADO);
    }

    /**
     * Create an aliased <code>receitas.receita_metadado</code> table reference
     */
    public ReceitaMetadado(Name alias) {
        this(alias, RECEITA_METADADO);
    }

    private ReceitaMetadado(Name alias, Table<ReceitaMetadadoRecord> aliased) {
        this(alias, aliased, null);
    }

    private ReceitaMetadado(Name alias, Table<ReceitaMetadadoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ReceitaMetadado(Table<O> child, ForeignKey<O, ReceitaMetadadoRecord> key) {
        super(child, key, RECEITA_METADADO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Receitas.RECEITAS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RECEITA_METADADO_FK_RECEITA_METADADO_RECEITA1_IDX, Indexes.RECEITA_METADADO_FK_RECEITA_METADADO_TIPO_METADADO1_IDX, Indexes.RECEITA_METADADO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ReceitaMetadadoRecord> getPrimaryKey() {
        return Keys.KEY_RECEITA_METADADO_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ReceitaMetadadoRecord>> getKeys() {
        return Arrays.<UniqueKey<ReceitaMetadadoRecord>>asList(Keys.KEY_RECEITA_METADADO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ReceitaMetadadoRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ReceitaMetadadoRecord, ?>>asList(Keys.FK_RECEITA_METADADO_RECEITA1, Keys.FK_RECEITA_METADADO_TIPO_METADADO1);
    }

    public Receita receita() {
        return new Receita(this, Keys.FK_RECEITA_METADADO_RECEITA1);
    }

    public Metadado metadado() {
        return new Metadado(this, Keys.FK_RECEITA_METADADO_TIPO_METADADO1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReceitaMetadado as(String alias) {
        return new ReceitaMetadado(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReceitaMetadado as(Name alias) {
        return new ReceitaMetadado(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ReceitaMetadado rename(String name) {
        return new ReceitaMetadado(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ReceitaMetadado rename(Name name) {
        return new ReceitaMetadado(name, null);
    }
}
